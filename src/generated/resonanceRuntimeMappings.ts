// Auto-generated from Resonance runtime metadata
// Generated at: 2025-08-13T10:18:59.176Z

export interface RuntimeMappings {
  palletNames: Record<number, string>;
  palletIndices: Record<string, number>;
  eventNames: Record<string, Record<number, string>>;
  callNames: Record<string, Record<number, string>>;
  storageKeys: {
    systemEvents: string;
  };
}

export const resonanceRuntimeMappings: RuntimeMappings = {
  palletNames: {
    0: 'system',
    1: 'timestamp',
    2: 'balances',
    3: 'transactionpayment',
    4: 'sudo',
    5: 'qpow',
    6: 'wormhole',
    7: 'miningrewards',
    8: 'vesting',
    9: 'preimage',
    10: 'scheduler',
    11: 'utility',
    12: 'referenda',
    13: 'reversibletransfers',
    14: 'convictionvoting',
    15: 'techcollective',
    16: 'techreferenda',
    17: 'merkleairdrop',
    18: 'treasurypallet',
    19: 'origins',
    20: 'recovery',
    21: 'assets',
  },

  palletIndices: {
    'system': 0,
    'timestamp': 1,
    'balances': 2,
    'transactionpayment': 3,
    'sudo': 4,
    'qpow': 5,
    'wormhole': 6,
    'miningrewards': 7,
    'vesting': 8,
    'preimage': 9,
    'scheduler': 10,
    'utility': 11,
    'referenda': 12,
    'reversibletransfers': 13,
    'convictionvoting': 14,
    'techcollective': 15,
    'techreferenda': 16,
    'merkleairdrop': 17,
    'treasurypallet': 18,
    'origins': 19,
    'recovery': 20,
    'assets': 21,
  },

  eventNames: {
    'system': {
      0: 'ExtrinsicSuccess',
      1: 'ExtrinsicFailed',
      2: 'CodeUpdated',
      3: 'NewAccount',
      4: 'KilledAccount',
      5: 'Remarked',
      6: 'UpgradeAuthorized',
    },
    'balances': {
      0: 'Endowed',
      1: 'DustLost',
      2: 'Transfer',
      3: 'BalanceSet',
      4: 'Reserved',
      5: 'Unreserved',
      6: 'ReserveRepatriated',
      7: 'Deposit',
      8: 'Withdraw',
      9: 'Slashed',
      10: 'Minted',
      11: 'Burned',
      12: 'Suspended',
      13: 'Restored',
      14: 'Upgraded',
      15: 'Issued',
      16: 'Rescinded',
      17: 'Locked',
      18: 'Unlocked',
      19: 'Frozen',
      20: 'Thawed',
      21: 'TotalIssuanceForced',
    },
    'transactionpayment': {
      0: 'TransactionFeePaid',
    },
    'sudo': {
      0: 'Sudid',
      1: 'KeyChanged',
      2: 'KeyRemoved',
      3: 'SudoAsDone',
    },
    'qpow': {
      0: 'ProofSubmitted',
      1: 'DistanceThresholdAdjusted',
    },
    'wormhole': {
      0: 'ProofVerified',
    },
    'miningrewards': {
      0: 'MinerRewarded',
      1: 'FeesCollected',
      2: 'TreasuryRewarded',
    },
    'vesting': {
      0: 'VestingUpdated',
      1: 'VestingCompleted',
    },
    'preimage': {
      0: 'Noted',
      1: 'Requested',
      2: 'Cleared',
    },
    'scheduler': {
      0: 'Scheduled',
      1: 'Canceled',
      2: 'Dispatched',
      3: 'RetrySet',
      4: 'RetryCancelled',
      5: 'CallUnavailable',
      6: 'PeriodicFailed',
      7: 'RetryFailed',
      8: 'PermanentlyOverweight',
    },
    'utility': {
      0: 'BatchInterrupted',
      1: 'BatchCompleted',
      2: 'BatchCompletedWithErrors',
      3: 'ItemCompleted',
      4: 'ItemFailed',
      5: 'DispatchedAs',
    },
    'referenda': {
      0: 'Submitted',
      1: 'DecisionDepositPlaced',
      2: 'DecisionDepositRefunded',
      3: 'DepositSlashed',
      4: 'DecisionStarted',
      5: 'ConfirmStarted',
      6: 'ConfirmAborted',
      7: 'Confirmed',
      8: 'Approved',
      9: 'Rejected',
      10: 'TimedOut',
      11: 'Cancelled',
      12: 'Killed',
      13: 'SubmissionDepositRefunded',
      14: 'MetadataSet',
      15: 'MetadataCleared',
    },
    'reversibletransfers': {
      0: 'HighSecuritySet',
      1: 'TransactionScheduled',
      2: 'TransactionCancelled',
      3: 'TransactionExecuted',
    },
    'convictionvoting': {
      0: 'Delegated',
      1: 'Undelegated',
      2: 'Voted',
      3: 'VoteRemoved',
    },
    'techcollective': {
      0: 'MemberAdded',
      1: 'RankChanged',
      2: 'MemberRemoved',
      3: 'Voted',
      4: 'MemberExchanged',
    },
    'techreferenda': {
      0: 'Submitted',
      1: 'DecisionDepositPlaced',
      2: 'DecisionDepositRefunded',
      3: 'DepositSlashed',
      4: 'DecisionStarted',
      5: 'ConfirmStarted',
      6: 'ConfirmAborted',
      7: 'Confirmed',
      8: 'Approved',
      9: 'Rejected',
      10: 'TimedOut',
      11: 'Cancelled',
      12: 'Killed',
      13: 'SubmissionDepositRefunded',
      14: 'MetadataSet',
      15: 'MetadataCleared',
    },
    'merkleairdrop': {
      0: 'AirdropCreated',
      1: 'AirdropFunded',
      2: 'Claimed',
      3: 'AirdropDeleted',
    },
    'treasurypallet': {
      0: 'Spending',
      1: 'Awarded',
      2: 'Burnt',
      3: 'Rollover',
      4: 'Deposit',
      5: 'SpendApproved',
      6: 'UpdatedInactive',
      7: 'AssetSpendApproved',
      8: 'AssetSpendVoided',
      9: 'Paid',
      10: 'PaymentFailed',
      11: 'SpendProcessed',
    },
    'recovery': {
      0: 'RecoveryCreated',
      1: 'RecoveryInitiated',
      2: 'RecoveryVouched',
      3: 'RecoveryClosed',
      4: 'AccountRecovered',
      5: 'RecoveryRemoved',
    },
    'assets': {
      0: 'Created',
      1: 'Issued',
      2: 'Transferred',
      3: 'Burned',
      4: 'TeamChanged',
      5: 'OwnerChanged',
      6: 'Frozen',
      7: 'Thawed',
      8: 'AssetFrozen',
      9: 'AssetThawed',
      10: 'AccountsDestroyed',
      11: 'ApprovalsDestroyed',
      12: 'DestructionStarted',
      13: 'Destroyed',
      14: 'ForceCreated',
      15: 'MetadataSet',
      16: 'MetadataCleared',
      17: 'ApprovedTransfer',
      18: 'ApprovalCancelled',
      19: 'TransferredApproved',
      20: 'AssetStatusChanged',
      21: 'AssetMinBalanceChanged',
      22: 'Touched',
      23: 'Blocked',
      24: 'Deposited',
      25: 'Withdrawn',
    },
  },

  callNames: {
    'system': {
      0: 'remark',
      1: 'set_heap_pages',
      2: 'set_code',
      3: 'set_code_without_checks',
      4: 'set_storage',
      5: 'kill_storage',
      6: 'kill_prefix',
      7: 'remark_with_event',
      9: 'authorize_upgrade',
      10: 'authorize_upgrade_without_checks',
      11: 'apply_authorized_upgrade',
    },
    'timestamp': {
      0: 'set',
    },
    'balances': {
      0: 'transfer_allow_death',
      2: 'force_transfer',
      3: 'transfer_keep_alive',
      4: 'transfer_all',
      5: 'force_unreserve',
      6: 'upgrade_accounts',
      8: 'force_set_balance',
      9: 'force_adjust_total_issuance',
      10: 'burn',
    },
    'sudo': {
      0: 'sudo',
      1: 'sudo_unchecked_weight',
      2: 'set_key',
      3: 'sudo_as',
      4: 'remove_key',
    },
    'wormhole': {
      0: 'verify_wormhole_proof',
    },
    'vesting': {
      0: 'vest',
      1: 'vest_other',
      2: 'vested_transfer',
      3: 'force_vested_transfer',
      4: 'merge_schedules',
      5: 'force_remove_vesting_schedule',
    },
    'preimage': {
      0: 'note_preimage',
      1: 'unnote_preimage',
      2: 'request_preimage',
      3: 'unrequest_preimage',
      4: 'ensure_updated',
    },
    'scheduler': {
      0: 'schedule',
      1: 'cancel',
      2: 'schedule_named',
      3: 'cancel_named',
      4: 'schedule_after',
      5: 'schedule_named_after',
      6: 'set_retry',
      7: 'set_retry_named',
      8: 'cancel_retry',
      9: 'cancel_retry_named',
    },
    'utility': {
      0: 'batch',
      1: 'as_derivative',
      2: 'batch_all',
      3: 'dispatch_as',
      4: 'force_batch',
      5: 'with_weight',
    },
    'referenda': {
      0: 'submit',
      1: 'place_decision_deposit',
      2: 'refund_decision_deposit',
      3: 'cancel',
      4: 'kill',
      5: 'nudge_referendum',
      6: 'one_fewer_deciding',
      7: 'refund_submission_deposit',
      8: 'set_metadata',
    },
    'reversibletransfers': {
      0: 'set_high_security',
      1: 'cancel',
      2: 'execute_transfer',
      3: 'schedule_transfer',
      4: 'schedule_transfer_with_delay',
    },
    'convictionvoting': {
      0: 'vote',
      1: 'delegate',
      2: 'undelegate',
      3: 'unlock',
      4: 'remove_vote',
      5: 'remove_other_vote',
    },
    'techcollective': {
      0: 'add_member',
      1: 'promote_member',
      2: 'demote_member',
      3: 'remove_member',
      4: 'vote',
      5: 'cleanup_poll',
      6: 'exchange_member',
    },
    'techreferenda': {
      0: 'submit',
      1: 'place_decision_deposit',
      2: 'refund_decision_deposit',
      3: 'cancel',
      4: 'kill',
      5: 'nudge_referendum',
      6: 'one_fewer_deciding',
      7: 'refund_submission_deposit',
      8: 'set_metadata',
    },
    'merkleairdrop': {
      0: 'create_airdrop',
      1: 'fund_airdrop',
      2: 'claim',
      3: 'delete_airdrop',
    },
    'treasurypallet': {
      3: 'spend_local',
      4: 'remove_approval',
      5: 'spend',
      6: 'payout',
      7: 'check_status',
      8: 'void_spend',
    },
    'recovery': {
      0: 'as_recovered',
      1: 'set_recovered',
      2: 'create_recovery',
      3: 'initiate_recovery',
      4: 'vouch_recovery',
      5: 'claim_recovery',
      6: 'close_recovery',
      7: 'remove_recovery',
      8: 'cancel_recovered',
    },
    'assets': {
      0: 'create',
      1: 'force_create',
      2: 'start_destroy',
      3: 'destroy_accounts',
      4: 'destroy_approvals',
      5: 'finish_destroy',
      6: 'mint',
      7: 'burn',
      8: 'transfer',
      9: 'transfer_keep_alive',
      10: 'force_transfer',
      11: 'freeze',
      12: 'thaw',
      13: 'freeze_asset',
      14: 'thaw_asset',
      15: 'transfer_ownership',
      16: 'set_team',
      17: 'set_metadata',
      18: 'clear_metadata',
      19: 'force_set_metadata',
      20: 'force_clear_metadata',
      21: 'force_asset_status',
      22: 'approve_transfer',
      23: 'cancel_approval',
      24: 'force_cancel_approval',
      25: 'transfer_approved',
      26: 'touch',
      27: 'refund',
      28: 'set_min_balance',
      29: 'touch_other',
      30: 'refund_other',
      31: 'block',
      32: 'transfer_all',
    },
  },

  storageKeys: {
    systemEvents: '0x26aa394eea5630e07c48ae0c9558cef780d41e5e16056765bc8461851072c9d7',
  }
};
// Helper functions

export function getPalletName(index: number): string {
  return resonanceRuntimeMappings.palletNames[index] || `pallet${index}`;
}

export function getPalletIndex(name: string): number | undefined {
  return resonanceRuntimeMappings.palletIndices[name.toLowerCase()];
}

export function getEventName(palletIndex: number, eventIndex: number): string {
  const palletName = getPalletName(palletIndex);
  return resonanceRuntimeMappings.eventNames[palletName]?.[eventIndex] || `event${eventIndex}`;
}

export function getCallName(palletIndex: number, callIndex: number): string {
  const palletName = getPalletName(palletIndex);
  return resonanceRuntimeMappings.callNames[palletName]?.[callIndex] || `call${callIndex}`;
}

export function getSystemEventsStorageKey(): string {
  return resonanceRuntimeMappings.storageKeys.systemEvents;
}